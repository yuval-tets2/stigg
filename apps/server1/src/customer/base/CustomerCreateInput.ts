/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { IsString, IsOptional, ValidateNested } from "class-validator";
import { PlanCreateNestedManyWithoutCustomersInput } from "./PlanCreateNestedManyWithoutCustomersInput";
import { Type } from "class-transformer";
import { UserCreateNestedManyWithoutCustomersInput } from "./UserCreateNestedManyWithoutCustomersInput";

@InputType()
class CustomerCreateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  firstName?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  lastName?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  phone?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  plan?: string | null;

  @ApiProperty({
    required: false,
    type: () => PlanCreateNestedManyWithoutCustomersInput,
  })
  @ValidateNested()
  @Type(() => PlanCreateNestedManyWithoutCustomersInput)
  @IsOptional()
  @Field(() => PlanCreateNestedManyWithoutCustomersInput, {
    nullable: true,
  })
  plans?: PlanCreateNestedManyWithoutCustomersInput;

  @ApiProperty({
    required: false,
    type: () => UserCreateNestedManyWithoutCustomersInput,
  })
  @ValidateNested()
  @Type(() => UserCreateNestedManyWithoutCustomersInput)
  @IsOptional()
  @Field(() => UserCreateNestedManyWithoutCustomersInput, {
    nullable: true,
  })
  users?: UserCreateNestedManyWithoutCustomersInput;
}

export { CustomerCreateInput };
